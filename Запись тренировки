Описание формата записи тренировки для вуло станка в 1.2
#### 1. Общая структура
Файл в формате JSON с обязательными разделами:
- formatVersion - версия формата (строка)
- metadata - метаинформация о тренировке
- userProfile - данные пользователя
- bikeSettings - настройки велостанка
- workoutPlan - план тренировки
- workoutData - фактические данные выполнения (опционально)

#### 2. Метаданные (metadata)
JSON

{
  "id": "UUID в строковом формате",
  "title": "Название тренировки",
  "description": "Описание",
  "author": "Автор/тренер",
  "creationDate": "Дата в ISO 8601",
  "modificationDate": "Дата в ISO 8601",
  "tags": ["список", "тегов"],
  "difficulty": "easy/medium/hard"  
}
#### 3. Профиль пользователя (userProfile)
JSON


{
  "weightKg": 75.5,
  "heightCm": 180,
  "age": 30,
  "gender": "male/female/other",
  "maxHeartRate": 185,
  "ftp": 250,
  "powerZones": [120, 150, 180, 210, 240]
}
#### 4. Настройки велостанка (bikeSettings)
JSON


{
  "model": "Модель станка",
  "resistanceUnit": "percent/level/nm",
  "calibration": {
    "lastCalibrated": "Дата в ISO 8601",
    "coefficient": 1.02
  },
  "maxResistance": 100  
}
#### 5. План тренировки (workoutPlan)
Основные поля:
- totalDurationSec - общая длительность в секундах
- targets - целевые показатели
- segments - массив сегментов тренировки

##### 5.1 Сегмент тренировки
JSON


{
  "type": "warmup/interval/cooldown/recovery",
  "durationSec": 600,
  "targetPower": {
    "type": "constant/ramp/step",
    "value": 150,
    "start": 100,
    "end": 200
  },
  "targetCadence": {
    "min": 80,
    "max": 90
  },
  "resistance": 50,
  "positionSettings": {
    "handsPosition": "hoods/drops/tops/aerobars",
    "bodyPosition": "seated/standing",
    "legFocus": "both/left/right"
  },
  "coachComments": [
    {
      "triggerTimeSec": 30,
      "message": "Текст реплики",
      "type": "instruction/motivation/warning",
      "durationSec": 5,
      "priority": "low/medium/high"
    }
  ]
}
#### 6. Данные выполнения (workoutData)
JSON


{
  "timestampStart": "Дата в ISO 8601",
  "timestampEnd": "Дата в ISO 8601",
  "records": [
    {
      "timestamp": "Дата в ISO 8601",
      "powerW": 150,
      "cadenceRpm": 85,
      "heartRateBpm": 140,
      "resistance": 50,
      "speedKph": 30.5,
      "distanceM": 1000
    }
  ],
  "positionTelemetry": [
    {
      "timestamp": "Дата в ISO 8601",
      "handsPosition": "hoods",
      "bodyPosition": "seated",
      "legForceDistribution": {
        "left": 55.3,
        "right": 44.7
      }
    }
  ],
  "coachFeedback": [
    {
      "timestamp": "Дата в ISO 8601",
      "message": "Текст обратной связи",
      "type": "correction/biomechCorrection",
      "severity": "low/medium/high"
    }
  ],
  "summary": {
    "avgPowerW": 200,
    "totalEnergyKj": 1200,
    "avgCadenceRpm": 85,
    "avgHeartRateBpm": 150,
    "totalDistanceM": 18000
  }
}
#### 7. Правила валидации
1. Обязательные поля:
   - formatVersion, metadata.id, workoutPlan.segments
   - Для каждого сегмента: type, durationSec
   - Для реплик: triggerTimeSec, message

2. Типы данных:
   - Время - целые числа (секунды)
   - Мощность - числа с плавающей точкой (Вт)
   - Проценты - числа от 0 до 100

3. Ограничения:
   - Сумма длительностей сегментов должна равняться totalDurationSec
   - triggerTimeSec не может превышать длительность сегмента
   - Распределение нагрузки на ноги должно суммироваться в 100%

#### 8. Пример использования
JSON


{
  "formatVersion": "1.2",
  "metadata": {
    "id": "a1b2c3d4-e5f6-7890",
    "title": "Интервальная тренировка",
    "author": "AI Тренер"
  },
  "workoutPlan": {
    "segments": [
      {
        "type": "warmup",
        "durationSec": 300,
        "targetPower": {
          "type": "ramp",
          "start": 100,
          "end": 150
        }
      }
    ]
  }
}
#### 9. Рекомендации по реализации
1. Для работы с большими файлами:
   - Используйте потоковое чтение/запись
   - Оптимальная частота записи данных: 1-10 Гц
2. Для условий в triggerCondition:
   - Реализуйте простой DSL-парсер
   - Поддерживайте базовые операторы: >, <, >=, <=, ==, &&, ||

3. Обработка ошибок:
   - Валидируйте JSON по схеме
   - Проверяйте согласованность данных (суммы длительностей и т.д.)

Формат обеспечивает полное описание тренировки - от плана до результатов выполнения, с поддержкой биомеханических данных и обратной связи тренера.

